package fr.utt.lo02.partie;

import java.util.ArrayList;

import fr.utt.lo02.carte.Carte;
import fr.utt.lo02.joueur.Humain;
import fr.utt.lo02.joueur.Joueur;
import fr.utt.lo02.vue.VueGraphique;

public class Controleur{

	private Partie partie;
	private VueGraphique vueGraphique=null;
	private ArrayList<Carte> listeCartesSelectionnees;
	
	private ArrayList<Carte> ListeCarte;
	
	public Controleur(Partie partie) {
		//this.vueGraphique = vueGraphique;
		this.ListeCarte = new ArrayList<Carte>();
		this.partie = partie;
		this.listeCartesSelectionnees = new ArrayList<Carte>();
	}
	
	public void actionCarteSelectionne(int i){
	}
	
	public Partie getPartie(){
		return this.partie;
	}
	
	public void ajouterCarteSelectionne(Carte c){
		this.listeCartesSelectionnees.add(c);
		System.out.println(this.listeCartesSelectionnees);
	}
	
	public void supprimerCarteSelectionne(Carte c){
		this.listeCartesSelectionnees.remove(c);		
		System.out.println(this.listeCartesSelectionnees);
	}
	
	public boolean envoyerSelection(){
		
		boolean selectionCorrecte = this.verifierSelection();
		if(selectionCorrecte){
			System.out.println(selectionCorrecte +": on envoie");
			this.partie.getTapis().ajouterPlusieursCartes(this.partie.getHumain().choisirCarteAJouer(this.listeCartesSelectionnees));
			System.out.println(this.partie.getHumain().getMainJoueur().getListeCartes().size());
			this.partie.fairePiocherJoueur(this.partie.getHumain());
			this.listeCartesSelectionnees = new ArrayList<Carte>();
			boutonJouer();
			lancerPartie();
		}
		return selectionCorrecte;
	}
	
	public boolean verifierSelection(){
		if(this.partie.verifierSelection(this.listeCartesSelectionnees))return true;
		else return false;
	}
	
	public void boutonJouer(){
		this.vueGraphique.changerBouton();
	}
	
	public void addVue(VueGraphique vueGraphique){	
		this.vueGraphique = vueGraphique;
	}
	
	
	public void lancerPartie(){
		boolean estDanish = false;
		Joueur gagnant = null;
		int nbtour = 0;
			
			Joueur joueur = this.partie.getListeJoueurs().get(this.partie.getJoueurCourant());
			if (joueur.peutJouer(this.partie.getTapis().getCarteDuDessus())) {
				if(joueur instanceof Humain){
					boutonJouer();
				}else{
					this.partie.faireJouerJoueur(joueur);
					this.vueGraphique.dessinerJeu();
					lancerPartie();
				}
				
				if (joueur.estGagnant()) {
					estDanish = true; 
					gagnant = joueur;
				} else {
					this.partie.fairePiocherJoueur(joueur);
				}
				
				//if (this.tapis.getCarteDuDessus().estSpeciale()) {ActionSpeciale actionSpeciale = new ActionSpeciale(this,this.joueurCourant, nbCartesPosees);actionSpeciale.appelerBonneMethode();}
			}
			else{
				joueur.getMainJoueur().getListeCartes().addAll(this.partie.getTapis().prendreTapis());
				System.out.println("Le joueur "+ joueur.getNom()+ " ne peut pas jouer, il ramasse le tapis.\n");

			}
			
			this.partie.incrementerJoueur();
			
			nbtour++;
		
	}
	
	
}
